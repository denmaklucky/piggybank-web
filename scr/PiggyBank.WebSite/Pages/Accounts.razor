@page "/accounts"
@inherits AccountsViewModel

<div class="margin_top_10">
    <div>
        <div class="f_left">Total balance</div>
        <div class="f_right">@(Accounts?.Where(a => !a.IsArchived).Sum(a => a.Balance))</div>
    </div>
    <br />
    <div>
        <hr size="1" color="#e5e5e5" />
    </div>
    <div class="margin_top_5">
        @if (Accounts == null)
        {
            <div class="text_center">
                <span>Loading accounts..</span>
            </div>
        }
        else
        {
            @foreach (var account in Accounts.Where(a => !a.IsArchived))
            {
                <AccountComponent Account="account" OnCardClick="OnShow" />
            }

            <div class="margin_top_5">
                <LinkButton HideText="Hide archived" ShowText="Show archived" OnShowed="ShowArchived" />

                <div class="margin_top_10" style="@ArchivedAccountsStyle">
                    @foreach (var account in Accounts.Where(a => a.IsArchived))
                    {
                        <AccountComponent Account="account" OnCardClick="OnShow" />
                    }
                </div>
            </div>
        }
    </div>
</div>

<EditAccountModal Account="SelectedAccount" />

@code{
    private const string DisplayNone = "display:none;";
    private const string DisplayBlock = "display:block;";

    public AccountInfoDto SelectedAccount { get; set; }

    public string ArchivedAccountsStyle { get; set; } = DisplayNone;

    public void OnShow(AccountInfoDto selectedAccount)
    {
        SelectedAccount = selectedAccount;
    }

    public void ShowArchived(bool show)
        => ArchivedAccountsStyle = show
                                 ? DisplayBlock
                                 : DisplayNone;
}
